<?xml version="1.0" ?>
<robot name="duke_bot" xmlns:xacro="http://www.ros.org/wiki/xacro" >

<xacro:property name="red_color" value="Gazebo/Red" />
<xacro:property name="body_color" value="Gazebo/Blue" />
<xacro:property name="green_color" value="Gazebo/Green" />
<xacro:property name="silver_color" value="Gazebo/Silver" />
<xacro:property name="orange_color" value="Gazebo/Orange" />
<xacro:property name="yellow_color" value="Gazebo/Yellow" />

<gazebo>
  <plugin name="ow1_force" filename="libgazebo_ros_force.so">
    <ros>
      <remapping>gazebo_ros_force:=ow1_force</remapping>
    </ros>
    <link_name>omni_wheel_1_1</link_name>
    <force_frame>link</force_frame>
  </plugin>
</gazebo>

<gazebo>
  <plugin name="ow2_force" filename="libgazebo_ros_force.so">
    <ros>
      <remapping>gazebo_ros_force:=ow2_force</remapping>
    </ros>
    <link_name>omni_wheel_2_1</link_name>
    <force_frame>link</force_frame>
  </plugin>
</gazebo>

<gazebo>
  <plugin name="ow3_force" filename="libgazebo_ros_force.so">
    <ros>
      <remapping>gazebo_ros_force:=ow3_force</remapping>
    </ros>
    <link_name>omni_wheel_3_1</link_name>
    <force_frame>link</force_frame>
  </plugin>
</gazebo>

<gazebo>
  <plugin name="object_controller_1" filename="libgazebo_ros_planar_move.so">
      <ros>
          <remapping>cmd_vel:=cmd_vel</remapping>
          <remapping>odom:=odom_pose</remapping>
        </ros>
        <robotBaseFrame>footprint_link</robotBaseFrame>
  </plugin>
</gazebo>

<gazebo reference="base_link">
    <sensor name="br_imu" type="imu">
        <always_on>true</always_on>
        <update_rate>100</update_rate>
        <imu>
          <angular_velocity>
            <x>
              <noise type="gaussian">
                <mean>0.0</mean>
                <stddev>2e-4</stddev>
              </noise>
            </x>
            <y>
              <noise type="gaussian">
                <mean>0.0</mean>
                <stddev>2e-4</stddev>
              </noise>
            </y>
            <z>
              <noise type="gaussian">
                <mean>0.0</mean>
                <stddev>2e-4</stddev>
              </noise>
            </z>
          </angular_velocity>
          <linear_acceleration>
            <x>
              <noise type="gaussian">
                <mean>0.0</mean>
                <stddev>1.7e-2</stddev>
              </noise>
            </x>
            <y>
              <noise type="gaussian">
                <mean>0.0</mean>
                <stddev>1.7e-2</stddev>
              </noise>
            </y>
            <z>
              <noise type="gaussian">
                <mean>0.0</mean>
                <stddev>1.7e-2</stddev>
              </noise>
            </z>
          </linear_acceleration>
        </imu>
        <plugin name="bytes_imu" filename="libgazebo_ros_imu_sensor.so">
            <ros>
                <namespace>imu</namespace>
                <remapping>~/out:=data</remapping>
            </ros>
            <initial_orientation_as_reference>true</initial_orientation_as_reference>
        </plugin>
    </sensor>
</gazebo>

<gazebo reference="lidar_1">
    <sensor name="rplidar_a3" type="ray">
        <always_on>true</always_on>
        <visualize>false</visualize>
        <pose>0 0 0 0 0 0</pose>
        <update_rate>100</update_rate>
        <ray>
          <scan>
            <horizontal>
              <samples>667</samples>
              <resolution>0.54</resolution>
              <min_angle>0.000000</min_angle>
              <max_angle>6.280000</max_angle>
            </horizontal>
          </scan>
          <range>
            <min>0.120000</min>
            <max>20</max>
            <resolution>0.54</resolution>
          </range>
          <noise>
            <type>gaussian</type>
            <mean>0.0</mean>
            <stddev>0.01</stddev>
          </noise>
        </ray>
        <plugin name="bytes_laserscan" filename="libgazebo_ros_ray_sensor.so">
          <ros>
              <namespace>lidar</namespace>
            <remapping>~/out:=scan</remapping>
          </ros>
          <output_type>sensor_msgs/LaserScan</output_type>
          <frame_name>head</frame_name>
        </plugin>
    </sensor>
</gazebo>

<gazebo reference="fake_camera_1">
  <sensor type="camera" name="ov_camera">
    <update_rate>60</update_rate>
    <visualize>false</visualize>
    <camera name="head">
      <horizontal_fov>1.3962634</horizontal_fov>
      <image>
        <width>640</width>
        <height>480</height>
        <format>R8G8B8</format>
      </image>
      <clip>
        <near>0.02</near>
        <far>100</far>
      </clip>
      <noise>
        <type>gaussian</type>
        <mean>0.0</mean>
        <stddev>0.007</stddev>
      </noise>
    </camera>
    <plugin name="camera_controller" filename="libgazebo_ros_camera.so">
      <ros>
        <remapping>image_raw:=image</remapping>
      </ros>
    </plugin>
  </sensor>
</gazebo>

<gazebo reference="base_link">
  <material>${body_color}</material>
  <mu1>0.2</mu1>
  <mu2>0.2</mu2>
  <self_collide>true</self_collide>
  <gravity>true</gravity>
</gazebo>

<gazebo reference="top_surface_holder_2_1">
  <material>${yellow_color}</material>
  <mu1>0.2</mu1>
  <mu2>0.2</mu2>
  <self_collide>true</self_collide>
</gazebo>

<gazebo reference="top_surface_holder_1_1">
  <material>${yellow_color}</material>
  <mu1>0.2</mu1>
  <mu2>0.2</mu2>
  <self_collide>true</self_collide>
</gazebo>

<gazebo reference="top_surface_holder_3_1">
  <material>${yellow_color}</material>
  <mu1>0.2</mu1>
  <mu2>0.2</mu2>
  <self_collide>true</self_collide>
</gazebo>

<gazebo reference="top_surface_1">
  <material>${orange_color}</material>
  <mu1>0.2</mu1>
  <mu2>0.2</mu2>
  <self_collide>true</self_collide>
</gazebo>

<gazebo reference="lidar_1">
  <material>${body_color}</material>
  <mu1>0.2</mu1>
  <mu2>0.2</mu2>
  <self_collide>true</self_collide>
</gazebo>

<gazebo reference="motor_holder_1_1">
  <material>${orange_color}</material>
  <mu1>0.2</mu1>
  <mu2>0.2</mu2>
  <self_collide>true</self_collide>
</gazebo>

<gazebo reference="motor_holder_2_1">
  <material>${orange_color}</material>
  <mu1>0.2</mu1>
  <mu2>0.2</mu2>
  <self_collide>true</self_collide>
</gazebo>

<gazebo reference="motor_holder_3_1">
  <material>${orange_color}</material>
  <mu1>0.2</mu1>
  <mu2>0.2</mu2>
  <self_collide>true</self_collide>
</gazebo>

<gazebo reference="n20_motor_1_1">
  <material>${silver_color}</material>
  <mu1>0.2</mu1>
  <mu2>0.2</mu2>
  <self_collide>true</self_collide>
</gazebo>

<gazebo reference="n20_motor_2_1">
  <material>${silver_color}</material>
  <mu1>0.2</mu1>
  <mu2>0.2</mu2>
  <self_collide>true</self_collide>
</gazebo>

<gazebo reference="n20_motor_3_1">
  <material>${silver_color}</material>
  <mu1>0.2</mu1>
  <mu2>0.2</mu2>
  <self_collide>true</self_collide>
</gazebo>

<gazebo reference="omni_wheel_1_1">
  <material>${red_color}</material>
  <mu1>0.2</mu1>
  <mu2>0.2</mu2>
  <self_collide>true</self_collide>
</gazebo>

<gazebo reference="omni_wheel_2_1">
  <material>${red_color}</material>
  <mu1>0.2</mu1>
  <mu2>0.2</mu2>
  <self_collide>true</self_collide>
</gazebo>

<gazebo reference="omni_wheel_3_1">
  <material>${red_color}</material>
  <mu1>0.2</mu1>
  <mu2>0.2</mu2>
  <self_collide>true</self_collide>
</gazebo>

<gazebo reference="ov_camera_1">
  <material>${green_color}</material>
  <mu1>0.2</mu1>
  <mu2>0.2</mu2>
  <self_collide>true</self_collide>
</gazebo>

<material name="silver">
  <color rgba="0.700 0.700 0.700 1.000"/>
</material>

</robot>
